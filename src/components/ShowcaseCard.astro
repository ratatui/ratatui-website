---
import { getGitHubStats, formatNumber } from "../utils/stats.ts";
import type { GitHubRepo } from "~/models/stats";
import type { ShowcaseProject } from "~/models/project.ts";

interface Props {
  colSpan: number;
  project: ShowcaseProject;
}

const { colSpan, project } = Astro.props;
const { title, owner, repo, url, description, media, alt } = project;

let stats: GitHubRepo = { stars: 100, forks: 100 };
try {
  stats = await getGitHubStats(owner, repo);
} catch (err) {
  console.error("Failed to fetch GitHub stats:", err);
}
---

<div class="landing-mono bg-slate-500 text-white dark:bg-slate-950">
  <a href={url} target="_blank">
    <p
      class={`font-bold text-3xl max-sm:text-lg
      ${colSpan === 1 ? "px-6 pt-6 pb-2 max-sm:pt-4" : "px-6 pt-[50px] pb-2 max-sm:pt-4"}`}
    >
      <span class="bracket-btn">{title}</span>
      <div class="landing-mono ml-6">
        <span class="bg-blue-700 py-1">
          <span class="m-0 bg-blue-500 p-1">‚≠ê</span>
          <span class="m-0 bg-blue-700 p-1 pr-2 pl-0">{formatNumber(stats.stars)}</span>
        </span>
      </div>
    </p>
  </a>
  <p class="landing-mono px-6 pt-2 text-slate-200 max-sm:text-xs dark:text-slate-300">
    {description}
  </p>
</div>
<div class="overflow-hidden bg-slate-500 p-3 dark:bg-slate-950">
  <a href={url} target="_blank">
    {
      media.endsWith("webm") ? (
        <video class="h-full w-full object-cover" src={media} autoplay muted loop playsinline />
      ) : media.includes("youtube") ? (
        <iframe class="h-full w-full" src={media} title="YouTube video player" allow="autoplay;" />
      ) : (
        <img class="h-full w-full object-cover" src={media} alt={alt} />
      )
    }
  </a>
</div>
