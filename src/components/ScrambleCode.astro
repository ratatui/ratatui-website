---
import { readFile } from "fs/promises";
import { codeToHtml } from "shiki";
import RatatuiVersion from "./RatatuiVersion.astro";
import CopyButton from "./CopyButton.astro";

interface Props {
  lang?: string;
  class?: string;
}

const { lang = "rust", class: className = "" } = Astro.props;

// Read file at build time
const code = await readFile("./code/tutorials/quickstart-ratatui/src/main.rs", "utf-8");

// Pre-render syntax highlighted HTML with Night Owl theme
const highlightedHtml = await codeToHtml(code, {
  lang: lang,
  theme: "night-owl",
});
---

<div class={`block-reveal-wrapper h-[460px] ${className} max-sm:hidden`}>
  <RatatuiVersion />
  <CopyButton code={code} class="absolute top-0 right-0" />
  <pre class="scramble-container"><code class="language-rust" /></pre>
  <div class="highlighted-code" set:html={highlightedHtml} />
</div>

<script define:vars={{ code }}>
  const initScramble = () => {
    const wrappers = document.querySelectorAll(".block-reveal-wrapper");

    wrappers.forEach((wrapper) => {
      const scrambleContainer = wrapper.querySelector(".scramble-container");
      const highlightedCode = wrapper.querySelector(".highlighted-code");
      const codeElement = scrambleContainer?.querySelector("code");

      if (!codeElement || codeElement.textContent) return;

      // Night Owl color palette for scrambling
      const nightOwlColors = [
        "#82AAFF", // variables (blue)
        "#c792ea", // keywords (purple)
        "#F78C6C", // numbers (orange)
        "#ecc48d", // strings (yellow)
        "#7fdbca", // functions (cyan)
        "#addb67", // green
        "#fff", // property white
      ];

      const charset =
        "🧀!✨<>-🌟_/\\[]{}🐭=+*^?#💛________0123456789🍕abcdefghijklmnopqrstuvwxyz🧡";

      const scrambleDuration = 2000;
      const revealInterval = 30;

      let frame = 0;
      const totalFrames = Math.ceil(scrambleDuration / revealInterval);
      const codeChars = Array.from(code);
      const codeLength = codeChars.length;

      const charsetArray = Array.from(charset);
      const randomChar = () => charsetArray[Math.floor(Math.random() * charsetArray.length)];
      const randomColor = () => nightOwlColors[Math.floor(Math.random() * nightOwlColors.length)];

      const scramble = () => {
        frame++;
        const revealCount = Math.floor((frame / totalFrames) * codeLength);

        let output = "";

        for (let i = 0; i < codeLength; i++) {
          if (i < revealCount) {
            // Revealed character in muted color
            const char = code[i];
            const escapedChar = char
              .replace(/&/g, "&amp;")
              .replace(/</g, "&lt;")
              .replace(/>/g, "&gt;");
            output += `<span style="color: #d6deeb;">${escapedChar}</span>`;
          } else {
            const char = code[i];
            if (char === " ") {
              output += " ";
            } else if (char === "\n") {
              output += "\n";
            } else if (char === "\t") {
              output += "\t";
            } else {
              // Scrambled character with Night Owl colors
              output += `<span style="color: ${randomColor()};">${randomChar()}</span>`;
            }
          }
        }

        codeElement.innerHTML = output;

        if (frame < totalFrames) {
          setTimeout(scramble, revealInterval);
        } else {
          // Fade out scramble, fade in highlighted
          scrambleContainer.style.opacity = "0";
          scrambleContainer.style.pointerEvents = "none";
          setTimeout(() => {
            highlightedCode.style.opacity = "1";
          }, 300);
        }
      };

      scramble();
    });
  };

  document.addEventListener("astro:page-load", initScramble);
  if (document.readyState === "loading") {
    document.addEventListener("DOMContentLoaded", initScramble);
  } else {
    initScramble();
  }
</script>

<style>
  .block-reveal-wrapper {
    position: relative;
    overflow: hidden;
    width: 600px;
    min-height: 100px; /* Reserve space to prevent collapse */
  }

  .scramble-container,
  .highlighted-code {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
  }

  .scramble-container {
    font-family: "Courier New", monospace;
    background: #011627;
    padding: 1rem;
    margin-top: 1.15rem;
    overflow-x: auto;
    white-space: pre;
    font-size: 14px;
    line-height: 1.7;
    opacity: 1;
    transition: opacity 0.3s ease;
    z-index: 2; /* Layer on top initially */
    user-select: none; /* Prevent selection during animation */
  }

  .scramble-container code {
    font-family: inherit;
    display: block;
  }

  .highlighted-code {
    opacity: 0;
    transition: opacity 0.5s ease;
    z-index: 1;
    user-select: text; /* Enable text selection */
    cursor: text; /* Show text cursor */
  }

  .highlighted-code :global(pre) {
    margin: 0;
    overflow-x: auto;
    background: #011627;
    padding: 1rem;
    font-size: 14px;
    line-height: 1.7;
    user-select: text; /* Ensure pre is also selectable */
  }

  .highlighted-code :global(code) {
    user-select: text; /* Ensure code is also selectable */
  }
</style>
